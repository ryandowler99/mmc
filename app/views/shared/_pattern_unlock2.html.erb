<style type="text/css"> 	
#dummyArea {
    display: none; /*for now*/
    position: absolute;
    top: 0px;
    z-index: -1;
}
#canvasArea{display: none;} /*for */
#enclosure {
    width: 62%;
    height: 400px;
    position: absolute;
    cursor: pointer;
}
#pattern {
    position: absolute;
    left: 35%;
    top: 11%;
}
#resetPattern {
    position: absolute;
    top: 151px;
    left: 150%;
    background-color: #6476D8;
    padding: 10px;
}
body {
    width: 100%;
    height: 100%;
}
body {
    margin: 0px;
    padding: 0px;
}
ul, li {
    list-style: none;
}
.button {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: rgb(183, 183, 194);
    float: left;
    position: relative;
}
.selected {
    border: 1px solid green;
    background-color: white
}
#row1 {
    position: absolute;
    top: 8px;
    width: 0px;
}
#row2 {
    position: absolute;
    top: 86px;
    width: 0px;
}
#row3 {
    position: absolute;
    top: 164px;
    width: 0px;
}
.buttonA {
    left: 0px;
    position: absolute;
}
.buttonB {
    left: 80px;
    position: absolute;
}
.buttonC {
    left: 160px;
    position: absolute;
}
#heading{
    font-family: sans-serif;
    font-size: 24px;
    font-weight: bold;
    color: #666;
    padding-bottom: 2px;
    margin-top: 0;
    margin-bottom: 24px;
    position: absolute;
    left: 39%;
}
#info{
    position: absolute;
    top: 170px;
    left: -20%;
    height: 86px;
    width: 200px;
    text-align: center;
    font-family: sans-serif;
    font-size: 20px;
    font-weight: bold;  
}
.error{ color:red; }
.info{color: #666; }

</style>

<p id="heading">Pattern Lock<p>

<div id="enclosure">
    <canvas id="dummyArea"></canvas>
    <canvas id="canvasArea"></canvas>
    <ul id="pattern">
        <li id="row1">
            <ul>
                <li id="1" class="button buttonA "></li>
                <li id="2" class="button buttonB "></li>
                <li id="3" class="button buttonC "></li>
            </ul>
        </li>
        <li id="row2">
            <ul>
                <li id="4" class="button buttonA "></li>
                <li id="5" class="button buttonB "></li>
                <li id="6" class="button buttonC "></li>
            </ul>
        </li>
        <li id="row3">
            <ul>
                <li id="7" class="button buttonA demoBtn"></li>
                <li id="8" class="button buttonB demoBtn1"></li>
                <li id="9" class="button buttonC "></li>
            </ul>
        </li>
    </ul>

  <input type="button" id="resetPattern" value="Start over"/>
</div>
<p id="info"><p>
<script type="text/javascript">
var numOfTimesPatternEntered = 0; //keep track of this to use when two pass's entered ie current pass followed by new pass 
$(document).ready(function () {
    var area = document.getElementById('canvasArea');
    var dummyArea = document.getElementById('dummyArea');

    var ctx = area.getContext('2d'),
        prev_x,
        prev_y,
        draw,
        patternArray = [],
        verifyPattern = [],
        savedPattern ,
        savePattern = true,
        enclosure = $("#enclosure"),
        enclosureX = enclosure.offset().left,
        enclosureY = enclosure.offset().top,
        dummyCtx = dummyArea.getContext('2d');

    area.width = parseInt(enclosure.width());
    area.height = parseInt(enclosure.height());
    dummyArea.width = parseInt(enclosure.width());
    dummyArea.height = parseInt(enclosure.height());

    if (localStorage) {
        savedPattern = localStorage.getItem("patternLock");
    }

//For Line color
    ctx.lineWidth = 10;
    ctx.lineJoin = 'round';
    ctx.lineCap = 'round';
    ctx.strokeStyle = 'pink';

    dummyCtx.lineWidth = 10;
    dummyCtx.lineJoin = 'round';
    dummyCtx.lineCap = 'round';
    dummyCtx.strokeStyle = 'red';

    function getPattermPasswords(savedPattern){
        var newPat = savedPattern.replace(/[\s,]+/g,'').trim();
        //console.log(" pass cjange block: " + newPat);

        //check whether its change pass  or sign up screen
        var curPassField = $('input#user_current_password');
        //change pass screen
        if(curPassField.length){
            console.log("numOfTimesPatternEntered is: " + numOfTimesPatternEntered);
            console.log(" pass cjange block: " + newPat);
             //second time running - new pattern now
            if(numOfTimesPatternEntered == 0){
                console.log("1 old pass is: " + newPat);
                $('input#user_current_password').val(newPat);
                //reset pattern & change ui for new pass
                    setTimeout(function() {
                        let msg = 'Now, Draw a new pass pattern';
                        $('#typingText').text(msg);
                        responsiveVoice.speak(msg);
                        clearThePattern();

                       $('.patternUnlockDiv').animate({
                            left: "+=85%"
                        }, 2000, function() {
                            //animation complete
                           //$('.patternUnlockDiv').css("display", "none");//hide elem
                            $('.patternUnlockDiv').css("left", "-65%");//change postion to left side for animation
                            //animate from left to right again
                            $('.patternUnlockDiv').animate({
                                left: "+=100%"
                            }, 2000, function() {
                                //animation complete 2
                            }); 
                        });                 
                    }, 1000);

            }else if(numOfTimesPatternEntered == 1){
                $('input#user_password').val(newPat);
                $('input#user_password_confirmation').val(newPat);
                console.log("2 new pass is: " + newPat);
                setTimeout(function() {
                $("#new_user").click();
            }, 2000);
            }
            numOfTimesPatternEntered += 1;

            setTimeout(function() {
                //$("#new_user").click();
            }, 2000);
        }else{
            //new user screen
            console.log(" new user");
            let userName = $('input#user_email').val(); //get inputted username
            let newUserName = userName + "@mmc.ie"; //append @mmc.ie to it
            if(userName){
                $('input#user_email').val(newUserName); //set new name to the field
            }
            setTimeout(function() {
                $("#new_user").submit();
            }, 2000);
        }

        //add password to form
        $('input#user_password').val(newPat);
        $('input#user_password_confirmation').val(newPat);
    }

//Initiate pattern tracking process.
    $(".button").on("mousedown", function (e) {
    	//alert("yo1");
        draw = true;
        prev_x = $(this).offset().left + 25 - enclosureX;
        prev_y = $(this).offset().top + 22 - enclosureY;
        $(this).addClass("selected");

        if (savePattern && !savedPattern)
            patternArray.push($(this).attr("id"));
        else
            verifyPattern.push($(this).attr("id"));

        e.preventDefault();
        return false;
    });

//To drag the line from one node to another
    $("#canvasArea").on("mousemove", function (e) {
        //alert("yo2");
        if (draw) {
            ctx.clearRect(0, 0, area.width, area.height);
            ctx.beginPath();
            ctx.moveTo(prev_x, prev_y);
            ctx.lineTo(e.pageX - enclosureX, e.pageY - enclosureY);
            ctx.closePath();
            ctx.stroke();
        }
    });

//Store the pattern in an array
    $(".button").on("mouseover", function () {
        if (draw) {
            $(this).addClass("selected");
            dummyCtx.beginPath();
            dummyCtx.moveTo(prev_x, prev_y);
            prev_x = $(this).offset().left + 25 - enclosureX;
            prev_y = $(this).offset().top + 25 - enclosureY;
            dummyCtx.lineTo(prev_x, prev_y);
            dummyCtx.closePath();
            dummyCtx.stroke();
            ctx.clearRect(0, 0, area.width, area.height);
            if (savePattern && !savedPattern)
                patternArray.push($(this).attr("id"));
            else
                verifyPattern.push($(this).attr("id"));
        }
    });

//Stop pattern recording
    enclosure.on("mouseup", function (e) {
        if (draw)
            savePasswordPattern(this);
    });

//Save the pattern
    function savePasswordPattern(e) {
        var patternArrayString = patternArray.toString();
        draw = false;
        ctx.clearRect(0, 0, area.width, area.height);
        if (savePattern && !savedPattern) {
            if (patternArray.length >= 3) {
                $("#info").html("Your pattern is set, use same pattern to unlock").addClass("info").removeClass("error");
                dummyCtx.clearRect(0, 0, dummyArea.width, dummyArea.height);
                $(".button").removeClass("selected");
                if (localStorage)
                    localStorage.setItem("patternLock", patternArrayString);
                savedPattern = patternArrayString;
            } else {
                $("#info").html("Atleast 3 nodes should be selected. Try again").addClass("error").removeClass("info");
            }

            dummyCtx.clearRect(0, 0, dummyArea.width, dummyArea.height);
            $(".button").removeClass("selected");
        }
        else {
            checkPattern();
        }
        savePattern = false;
    }

//Check the pattern
    function checkPattern() {
        if (savedPattern === verifyPattern.toString()) {
            $("#info").html("That's Right!").addClass("info").removeClass("error");
            getPattermPasswords(savedPattern); //get the pattern and add to form
            //alert("its correct");
        }
        else {
            $("#info").html("Wrong pattern, Try again").addClass("error").removeClass("info");
            verifyPattern = []
        }

        dummyCtx.clearRect(0, 0, dummyArea.width, dummyArea.height);
        $(".button").removeClass("selected");
        verifyPattern = [];
    }

    function clearThePattern(){
        localStorage ? localStorage.removeItem("patternLock") : localStorage = {};
        // localStorage.removeItem("patternLock");
        savedPattern = "";
        patternArray = [];
        $("#info").html("<%= val3 ? val3 : 'Try a new pattern' %>").addClass("info").removeClass("error");
        savePattern = true;
    }

//Reset the pattern
    $("#resetPattern").on('click', function () {
       clearThePattern();
    });
    $(function() {
        clearThePattern();
    });


});
</script>
